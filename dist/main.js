(()=>{"use strict";class t{constructor(t,e,a,n,s){this.title=t,this.description=e,this.dueDate=a,this.priority=n,this.project=s}static tasks=[];addToArray(){t.tasks.push(this)}static removeFromArray(e){t.tasks.splice(e,1)}static editTask(e,a,n,s,o,i){t.tasks[e].title=a,t.tasks[e].description=n,t.tasks[e].dueDate=s,t.tasks[e].priority=o,t.tasks[e].project=i,console.log(t.tasks)}}const e=t;class a{static domController(){const t=a.getInformation(),e=a.addTask(t.title,t.description,t.dueDate,t.priority,t.project),n=a.generateTask(e);a.removeTask(n.removeButton),a.editTask(n.editButton)}static addButtonEvent(){document.querySelector("#add-task-button").addEventListener("click",(t=>{t.preventDefault(),a.domController(),console.log(e.tasks)}))}static getInformation(){const t=document.querySelectorAll("input");return{title:t[0].value,description:t[1].value,dueDate:t[2].value,priority:t[3].value,project:document.querySelector("select").value}}static addTask(t,a,n,s,o){const i=new e(t,a,n,s,o);return i.addToArray(),i}static generateTask(t){const e=document.createElement("div");e.classList.add("task-container");const n=document.createElement("p"),s=document.createElement("p"),o=document.createElement("p"),i=document.createElement("p"),d=document.createElement("p"),c=document.createElement("button"),r=document.createElement("button");return o.classList.add("date"),n.textContent=t.title,s.textContent=t.description,o.textContent=t.dueDate,i.textContent=t.priority,d.textContent=t.project,c.textContent="X",r.textContent="Edit",document.querySelector(".tasks").appendChild(e),e.appendChild(n),e.appendChild(s),e.appendChild(o),e.appendChild(i),e.appendChild(d),e.appendChild(c),e.appendChild(r),a.giveDataAttribute(),{removeButton:c,editButton:r}}static giveDataAttribute(){for(let t=0;t<document.querySelectorAll(".task-container").length;t++)document.querySelectorAll(".task-container")[t].setAttribute("data-index",t)}static removeTask(t){t.addEventListener("click",(t=>{t.path[1].remove(),e.removeFromArray(t.path[1].dataset.index),a.giveDataAttribute()}))}static editTask(t){t.addEventListener("click",(t=>{const e=t.path[1].childNodes;e.forEach((t=>{if("P"===t.nodeName&&t.classList.contains("date")){const e=document.createElement("input");e.setAttribute("type","date"),e.classList.add("date"),t.replaceWith(e)}else"P"===t.nodeName&&t.setAttribute("contenteditable","true")}));const n=document.createElement("button");n.textContent="Save",t.path[1].appendChild(n),n.addEventListener("click",(t=>{let s="";e.forEach((t=>{if(t.classList.contains("date")){s+=t.value+"~";const e=document.createElement("p");e.classList.add("date"),e.textContent=t.value,t.replaceWith(e)}else"true"===t.contentEditable&&(s+=t.textContent+"~",t.contentEditable="false")})),a.getNewValues(s,t.path[1].dataset.index),n.remove()}))}))}static getNewValues(t,a){const n=(t=t.split("~"))[0],s=t[1],o=t[2],i=t[3],d=t[4];e.editTask(a,n,s,o,i,d)}}a.addButtonEvent()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,