(()=>{"use strict";class t{constructor(t,e,a,n,r){this.title=t,this.description=e,this.dueDate=a,this.priority=n,this.project=r}static tasks=[];addToArray(){t.tasks.push(this)}static removeFromArray(e){t.tasks.splice(e,1)}}const e=t;class a{static domController(){const t=a.getInformation(),e=a.addTask(t.title,t.description,t.dueDate,t.priority,t.project),n=a.generateTask(e);a.removeTask(n)}static addButtonEvent(){document.querySelector("#add-task-button").addEventListener("click",(t=>{t.preventDefault(),a.domController(),console.log(e.tasks)}))}static getInformation(){const t=document.querySelectorAll("input");return{title:t[0].value,description:t[1].value,dueDate:t[2].value,priority:t[3].value,project:document.querySelector("select").value}}static addTask(t,a,n,r,o){const c=new e(t,a,n,r,o);return c.addToArray(),c}static generateTask(t){const e=document.createElement("div");e.classList.add("task-container");const n=document.createElement("p"),r=document.createElement("p"),o=document.createElement("p"),c=document.createElement("p"),i=document.createElement("p"),s=document.createElement("button");return n.textContent=t.title,r.textContent=t.description,o.textContent=t.dueDate,c.textContent=t.priority,i.textContent=t.project,s.textContent="X",document.querySelector(".tasks").appendChild(e),e.appendChild(n),e.appendChild(r),e.appendChild(o),e.appendChild(c),e.appendChild(i),e.appendChild(s),a.giveDataAttribute(),s}static giveDataAttribute(){for(let t=0;t<document.querySelectorAll(".task-container").length;t++)document.querySelectorAll(".task-container")[t].setAttribute("data-index",t)}static removeTask(t){t.addEventListener("click",(t=>{t.path[1].remove(),e.removeFromArray(t.path[1].dataset.index),a.giveDataAttribute()}))}}a.addButtonEvent()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFDRkMsWUFBWUMsRUFBT0MsRUFBYUMsRUFBU0MsRUFBVUMsR0FDL0NDLEtBQUtMLE1BQVFBLEVBQ2JLLEtBQUtKLFlBQWNBLEVBQ25CSSxLQUFLSCxRQUFVQSxFQUNmRyxLQUFLRixTQUFXQSxFQUNoQkUsS0FBS0QsUUFBVUEsRUFHbkIsYUFBZSxHQUVmRSxhQUNJUixFQUFLUyxNQUFNQyxLQUFLSCxNQUdwQix1QkFBdUJJLEdBQ25CWCxFQUFLUyxNQUFNRyxPQUFPRCxFQUFPLElBSWpDLFVDbEJBLE1BQU1FLEVBRUYsdUJBQ0ksTUFBTUMsRUFBT0QsRUFBR0UsaUJBQ1ZDLEVBQU9ILEVBQUdJLFFBQVFILEVBQUtaLE1BQU9ZLEVBQUtYLFlBQWFXLEVBQUtWLFFBQVNVLEVBQUtULFNBQVVTLEVBQUtSLFNBQ2xGWSxFQUFlTCxFQUFHTSxhQUFhSCxHQUNyQ0gsRUFBR08sV0FBV0YsR0FHbEIsd0JBQ3NCRyxTQUFTQyxjQUFjLG9CQUMvQkMsaUJBQWlCLFNBQVVDLElBQ2pDQSxFQUFFQyxpQkFDRlosRUFBR2EsZ0JBQ0hDLFFBQVFDLElBQUksWUFLcEIsd0JBQ0ksTUFBTUMsRUFBV1IsU0FBU1MsaUJBQWlCLFNBTTNDLE1BQU8sQ0FBQzVCLE1BTE0yQixFQUFTLEdBQUdFLE1BS1g1QixZQUpLMEIsRUFBUyxHQUFHRSxNQUlKM0IsUUFIWnlCLEVBQVMsR0FBR0UsTUFHUzFCLFNBRnBCd0IsRUFBUyxHQUFHRSxNQUVrQnpCLFFBRC9CZSxTQUFTQyxjQUFjLFVBQVVTLE9BSXJELGVBQWU3QixFQUFPQyxFQUFhQyxFQUFTQyxFQUFVQyxHQUVsRCxNQUFNMEIsRUFBVSxJQUFJLEVBQUs5QixFQUFPQyxFQUFhQyxFQUFTQyxFQUFVQyxHQUloRSxPQURBMEIsRUFBUXhCLGFBQ0R3QixFQUdYLG9CQUFvQkMsR0FDaEIsTUFBTUMsRUFBZ0JiLFNBQVNjLGNBQWMsT0FDN0NELEVBQWNFLFVBQVVDLElBQUksa0JBRTVCLE1BQU1uQyxFQUFRbUIsU0FBU2MsY0FBYyxLQUMvQmhDLEVBQWNrQixTQUFTYyxjQUFjLEtBQ3JDL0IsRUFBVWlCLFNBQVNjLGNBQWMsS0FDakM5QixFQUFXZ0IsU0FBU2MsY0FBYyxLQUNsQzdCLEVBQVVlLFNBQVNjLGNBQWMsS0FDakNqQixFQUFlRyxTQUFTYyxjQUFjLFVBbUI1QyxPQWpCQWpDLEVBQU1vQyxZQUFjTCxFQUFJL0IsTUFDeEJDLEVBQVltQyxZQUFjTCxFQUFJOUIsWUFDOUJDLEVBQVFrQyxZQUFjTCxFQUFJN0IsUUFDMUJDLEVBQVNpQyxZQUFjTCxFQUFJNUIsU0FDM0JDLEVBQVFnQyxZQUFjTCxFQUFJM0IsUUFDMUJZLEVBQWFvQixZQUFjLElBRTNCakIsU0FBU0MsY0FBYyxVQUFVaUIsWUFBWUwsR0FDN0NBLEVBQWNLLFlBQVlyQyxHQUMxQmdDLEVBQWNLLFlBQVlwQyxHQUMxQitCLEVBQWNLLFlBQVluQyxHQUMxQjhCLEVBQWNLLFlBQVlsQyxHQUMxQjZCLEVBQWNLLFlBQVlqQyxHQUMxQjRCLEVBQWNLLFlBQVlyQixHQUUxQkwsRUFBRzJCLG9CQUVJdEIsRUFHWCwyQkFDSSxJQUFLLElBQUl1QixFQUFJLEVBQUdBLEVBQUlwQixTQUFTUyxpQkFBaUIsbUJBQW1CWSxPQUFRRCxJQUNyRXBCLFNBQVNTLGlCQUFpQixtQkFBbUJXLEdBQUdFLGFBQWEsYUFBY0YsR0FJbkYsa0JBQWtCRyxHQUNkQSxFQUFPckIsaUJBQWlCLFNBQVVDLElBQzlCQSxFQUFFcUIsS0FBSyxHQUFHQyxTQUNWLGtCQUFxQnRCLEVBQUVxQixLQUFLLEdBQUdFLFFBQVFwQyxPQUN2Q0UsRUFBRzJCLHdCQU1mLEVDcEZBLGtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3Rhc2tzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9kb20uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFRhc2sge1xuICAgIGNvbnN0cnVjdG9yKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIHByb2plY3QpIHtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGU7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcbiAgICAgICAgdGhpcy5wcm9qZWN0ID0gcHJvamVjdDtcbiAgICB9XG5cbiAgICBzdGF0aWMgdGFza3MgPSBbXTtcblxuICAgIGFkZFRvQXJyYXkoKSB7XG4gICAgICAgIFRhc2sudGFza3MucHVzaCh0aGlzKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgcmVtb3ZlRnJvbUFycmF5KGluZGV4KSB7XG4gICAgICAgIFRhc2sudGFza3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRhc2siLCJpbXBvcnQgVGFzayBmcm9tICcuL3Rhc2tzJztcblxuY2xhc3MgVUkge1xuXG4gICAgc3RhdGljIGRvbUNvbnRyb2xsZXIoKSB7XG4gICAgICAgIGNvbnN0IGluZm8gPSBVSS5nZXRJbmZvcm1hdGlvbigpO1xuICAgICAgICBjb25zdCB0YXNrID0gVUkuYWRkVGFzayhpbmZvLnRpdGxlLCBpbmZvLmRlc2NyaXB0aW9uLCBpbmZvLmR1ZURhdGUsIGluZm8ucHJpb3JpdHksIGluZm8ucHJvamVjdCk7XG4gICAgICAgIGNvbnN0IHJlbW92ZUJ1dHRvbiA9IFVJLmdlbmVyYXRlVGFzayh0YXNrKTtcbiAgICAgICAgVUkucmVtb3ZlVGFzayhyZW1vdmVCdXR0b24pO1xuICAgIH1cbiAgICBcbiAgICBzdGF0aWMgYWRkQnV0dG9uRXZlbnQoKSB7XG4gICAgICAgIGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtdGFzay1idXR0b24nKTtcbiAgICAgICAgYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIFVJLmRvbUNvbnRyb2xsZXIoKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFRhc2sudGFza3MpO1xuICAgICAgICB9KTtcblxuICAgIH1cblxuICAgIHN0YXRpYyBnZXRJbmZvcm1hdGlvbigpIHtcbiAgICAgICAgY29uc3QgZm9ybUluZm8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCcpO1xuICAgICAgICBjb25zdCB0aXRsZSA9IGZvcm1JbmZvWzBdLnZhbHVlO1xuICAgICAgICBjb25zdCBkZXNjcmlwdGlvbiA9IGZvcm1JbmZvWzFdLnZhbHVlO1xuICAgICAgICBjb25zdCBkdWVEYXRlID0gZm9ybUluZm9bMl0udmFsdWU7XG4gICAgICAgIGNvbnN0IHByaW9yaXR5ID0gZm9ybUluZm9bM10udmFsdWU7XG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKS52YWx1ZTtcbiAgICAgICAgcmV0dXJuIHt0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBwcm9qZWN0fTtcbiAgICB9XG5cbiAgICBzdGF0aWMgYWRkVGFzayh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBwcm9qZWN0KSB7XG4gICAgICAgIC8vQ3JlYXRlIG5ldyBpbnN0YW5jZSBvZiBUYXNrLlxuICAgICAgICBjb25zdCBuZXdUYXNrID0gbmV3IFRhc2sodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgcHJvamVjdCk7XG5cbiAgICAgICAgLy9BZGQgdGhlIHRhc2sgdG8gdGhlIGFycmF5LlxuICAgICAgICBuZXdUYXNrLmFkZFRvQXJyYXkoKVxuICAgICAgICByZXR1cm4gbmV3VGFzaztcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2VuZXJhdGVUYXNrKG9iaikge1xuICAgICAgICBjb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRhc2tDb250YWluZXIuY2xhc3NMaXN0LmFkZCgndGFzay1jb250YWluZXInKTtcblxuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgIGNvbnN0IGR1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgIGNvbnN0IHByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICBjb25zdCBwcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICBjb25zdCByZW1vdmVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcblxuICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IG9iai50aXRsZTtcbiAgICAgICAgZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBvYmouZGVzY3JpcHRpb247XG4gICAgICAgIGR1ZURhdGUudGV4dENvbnRlbnQgPSBvYmouZHVlRGF0ZTtcbiAgICAgICAgcHJpb3JpdHkudGV4dENvbnRlbnQgPSBvYmoucHJpb3JpdHk7XG4gICAgICAgIHByb2plY3QudGV4dENvbnRlbnQgPSBvYmoucHJvamVjdDtcbiAgICAgICAgcmVtb3ZlQnV0dG9uLnRleHRDb250ZW50ID0gJ1gnO1xuXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrcycpLmFwcGVuZENoaWxkKHRhc2tDb250YWluZXIpO1xuICAgICAgICB0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICAgICAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbik7XG4gICAgICAgIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQoZHVlRGF0ZSk7XG4gICAgICAgIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQocHJpb3JpdHkpO1xuICAgICAgICB0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKHByb2plY3QpO1xuICAgICAgICB0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKHJlbW92ZUJ1dHRvbik7XG5cbiAgICAgICAgVUkuZ2l2ZURhdGFBdHRyaWJ1dGUoKTtcblxuICAgICAgICByZXR1cm4gcmVtb3ZlQnV0dG9uO1xuICAgIH1cblxuICAgIHN0YXRpYyBnaXZlRGF0YUF0dHJpYnV0ZSgpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGFzay1jb250YWluZXInKS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhc2stY29udGFpbmVyJylbaV0uc2V0QXR0cmlidXRlKCdkYXRhLWluZGV4JywgaSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzdGF0aWMgcmVtb3ZlVGFzayhidXR0b24pIHtcbiAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgIGUucGF0aFsxXS5yZW1vdmUoKTtcbiAgICAgICAgICAgIFRhc2sucmVtb3ZlRnJvbUFycmF5KGUucGF0aFsxXS5kYXRhc2V0LmluZGV4KTtcbiAgICAgICAgICAgIFVJLmdpdmVEYXRhQXR0cmlidXRlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBVSSIsImltcG9ydCBUYXNrIGZyb20gJy4vdGFza3MnO1xuaW1wb3J0IFVJIGZyb20gJy4vZG9tJztcblxuVUkuYWRkQnV0dG9uRXZlbnQoKTsiXSwibmFtZXMiOlsiVGFzayIsImNvbnN0cnVjdG9yIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGUiLCJwcmlvcml0eSIsInByb2plY3QiLCJ0aGlzIiwiYWRkVG9BcnJheSIsInRhc2tzIiwicHVzaCIsImluZGV4Iiwic3BsaWNlIiwiVUkiLCJpbmZvIiwiZ2V0SW5mb3JtYXRpb24iLCJ0YXNrIiwiYWRkVGFzayIsInJlbW92ZUJ1dHRvbiIsImdlbmVyYXRlVGFzayIsInJlbW92ZVRhc2siLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0IiwiZG9tQ29udHJvbGxlciIsImNvbnNvbGUiLCJsb2ciLCJmb3JtSW5mbyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ2YWx1ZSIsIm5ld1Rhc2siLCJvYmoiLCJ0YXNrQ29udGFpbmVyIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwiYXBwZW5kQ2hpbGQiLCJnaXZlRGF0YUF0dHJpYnV0ZSIsImkiLCJsZW5ndGgiLCJzZXRBdHRyaWJ1dGUiLCJidXR0b24iLCJwYXRoIiwicmVtb3ZlIiwiZGF0YXNldCJdLCJzb3VyY2VSb290IjoiIn0=